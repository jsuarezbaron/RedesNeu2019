percentil <- qt(1 - alfa/2,df)
return(c(beta - percentil * sqrt(betacov[indice,indice]),
beta + percentil * sqrt(betacov[indice,indice])))
}
intervalo_asin<- function(beta,indice,alfa,betacov){
percentil <- qnorm(1 - alfa/2)
return(c(beta - percentil * sqrt(betacov[indice,indice]),
beta + percentil * sqrt(betacov[indice,indice])))
}
contiene <- function(a,I){
return(I[1]<=a && a <= I[2])
}
n <- c(10,25,100,250, 500, 1000, 1500, 2000, 3000)
nrow <- 4
ncol <- 9
proporciones <- matrix(nrow = nrow,ncol = ncol)
colnames(proporciones) <- n
rownames(proporciones) <- c("Intervalos para beta1","Intervalos asintóticos para beta1",
"Intervalos para beta4","Intervalos asintóticos para beta4")
mu <- 0
sigma2 <- 1
B <- 1000
set.seed(1)
beta <- c(4,2,-3,0.5,0)
beta3_fit <- c()
for(i in 1:ncol){
cubrimiento <- c(0,0,0,0,0)
cubrimiento_asin <- c(0,0,0,0,0)
beta3 <- c()
for (j in 1:B){
x1 <- runif(n[i],-5,5)
x2 <- runif(n[i],-5,5)
x3 <- runif(n[i],-5,5)
e <- rlnorm(n[i],mu,sigma2) - exp(mu + sigma2/2)
y <- 4 + 2*x1 - 3*x2 + 0.5*x3 + e
x4 <- runif(n[i],-5,5)
fit <- lm(y ~ x1 + x2 + x3 + x4)
df <- n[i] - 5
#X <- model.matrix(fit)
#XtX_inv <- solve(t(X)%*%X)
#s_cuadrado <- (sum((y - fit$fitted.values)**2))/df
cov_beta <- vcov(fit)
alfa <- 0.1
beta2_fit <- (fit$coefficients)[2]
beta5_fit <- (fit$coefficients)[5]
beta3 <- c(beta3,(fit$coefficients)[3])
cubrimiento[2] <- cubrimiento[2] + contiene(beta[2],intervalo(beta2_fit,2,alfa,df,cov_beta))
cubrimiento[5] <- cubrimiento[5] + contiene(beta[5],intervalo(beta5_fit,5,alfa,df,cov_beta))
cubrimiento_asin[2] <- cubrimiento_asin[2] + contiene(beta[2],intervalo_asin(beta2_fit,2,alfa,cov_beta))
cubrimiento_asin[5] <- cubrimiento_asin[5] + contiene(beta[5],intervalo_asin(beta5_fit,5,alfa,cov_beta))
}
beta3_fit <- rbind(beta3_fit,beta3)
proporciones[1,i] <- cubrimiento[2]/B
proporciones[2,i] <- cubrimiento_asin[2]/B
proporciones[3,i] <- cubrimiento[5]/B
proporciones[4,i] <- cubrimiento_asin[5]/B
}
hist(beta3_fit[1,],breaks=seq(-4.6,-0.9,0.05))
hist(beta3_fit[2,],breaks=seq(-4.6,-0.9,0.05))
hist(beta3_fit[3,],breaks=seq(-4.6,-0.9,0.05))
hist(beta3_fit[4,],breaks=seq(-4.6,-0.9,0.05))
hist(beta3_fit[5,],breaks=seq(-4.6,-0.9,0.05))
hist(beta3_fit[6,],breaks=seq(-4.6,-0.9,0.05))
hist(beta3_fit[7,],breaks=seq(-4.6,-0.9,0.05))
hist(beta3_fit[8,],breaks=seq(-4.6,-0.9,0.05))
hist(beta3_fit[9,],breaks=seq(-4.6,-0.9,0.05))
View(proporciones)
### Observando los histogramas se podría concluir que los beta se distribuyen normalmente, y que,
### aumentando la cantidad de observaciones, la varianza va disminuyéndose, lo cual es coherente
### con la consistencia de los estimadores. Sin embargo, mirando la tabla de las proporciones de
### los intervalos de confianza, no me convence que dicha proporción no mejore demasiado a medida
### que aumento el tamaño de la muestra, pero creo que eso puede deberse a que el bootstrap no
### puede extraer suficiente información si la cantidad de iteraciones (B=1000) no supera al tamaño
### de la muestra. Por lo que si quiero ver una proporción (de intervalos que contengan al valor
### verdadero) aún más cercana al nivel de confianza de los intervalos (0.90), tendría que aumentar
### la cantidad de iteraciones al menos hasta el valor 3000, que corresponde al tamaño más grande
### con el que genero los datos.
set.seed(1)
runif(5,-1,1)
hist(beta3_fit[1,],breaks=seq(-4.6,-0.9,0.05))
hist(beta3_fit[1,],breaks=seq(-4.6,-0.9,0.05))
hist(beta3_fit[2,],breaks=seq(-4.6,-0.9,0.05),add=T)
hist(beta3_fit[1,],breaks=seq(-4.6,-0.9,0.05))
hist(beta3_fit[2,],breaks=seq(-4.6,-0.9,0.05),add=T)
hist(beta3_fit[1,],breaks=seq(-4.6,-0.9,0.05),col=1)
hist(beta3_fit[1,],breaks=seq(-4.6,-0.9,0.05),col=1)
hist(beta3_fit[2,],breaks=seq(-4.6,-0.9,0.05),col=2,add=T)
hist(beta3_fit[3,],breaks=seq(-4.6,-0.9,0.05),col=3,add=T)
hist(beta3_fit[4,],breaks=seq(-4.6,-0.9,0.05),col=4,add=T)
hist(beta3_fit[5,],breaks=seq(-4.6,-0.9,0.05),col=5,add=T)
hist(beta3_fit[6,],breaks=seq(-4.6,-0.9,0.05),col=6,add=T)
hist(beta3_fit[1,],breaks=seq(-4.6,-0.9,0.05),col=1)
hist(beta3_fit[2,],breaks=seq(-4.6,-0.9,0.05),col=2,add=T)
hist(beta3_fit[3,],breaks=seq(-4.6,-0.9,0.05),col=3,add=T)
hist(beta3_fit[4,],breaks=seq(-4.6,-0.9,0.05),col=4,add=T)
hist(beta3_fit[5,],breaks=seq(-4.6,-0.9,0.05),col=5,add=T)
hist(beta3_fit[6,],breaks=seq(-4.6,-0.9,0.05),col=6,add=T)
hist(beta3_fit[7,],breaks=seq(-4.6,-0.9,0.05),col=7,add=T)
hist(beta3_fit[8,],breaks=seq(-4.6,-0.9,0.05),col=8,add=T)
hist(beta3_fit[9,],breaks=seq(-4.6,-0.9,0.05),col=9,add=T)
qqnorm(beta3_fit)
qqnorm(beta3_fit[1,])
qqnorm(beta3_fit[1,])
qqnorm(beta3_fit[2,])
qqnorm(beta3_fit[3,])
qqnorm(beta3_fit[4,])
qqnorm(beta3_fit[5,])
qqnorm(beta3_fit[6,])
qqnorm(beta3_fit[7,])
qqnorm(beta3_fit[8,])
abline(h=x)
curve(x,add=T)
curve(y<-function(x){x},add=T)
curve(y<-function(x){return(x)},add=T)
qqline(beta3_fit[1,])
beta3_fit_esc <- t(scale(beta3_fit))
qqnorm(beta3_fit_esc[1,])
qqnorm(beta3_fit_esc[2,])
qqnorm(beta3_fit_esc[3,])
qqnorm(beta3_fit_esc[4,])
qqnorm(beta3_fit_esc[5,])
qqnorm(beta3_fit_esc[6,])
qqnorm(beta3_fit_esc[7,])
qqnorm(beta3_fit_esc[8,])
beta3_fit_esc <- t(scale(t(beta3_fit)))
qqnorm(beta3_fit_esc[1,])
qqnorm(beta3_fit_esc[2,])
qqnorm(beta3_fit_esc[3,])
qqnorm(beta3_fit_esc[4,])
qqnorm(beta3_fit_esc[5,])
qqnorm(beta3_fit_esc[6,])
qqnorm(beta3_fit_esc[7,])
qqnorm(beta3_fit_esc[8,])
hist(beta3_fit_esc[1,])
qqnorm(beta3_fit_esc[1,])
abline(x)
abline(seq(-4,4,0.01),seq(-4,4,0.01))
qqnorm(beta3_fit_esc[1,])
lines(x=c(-4,4),y=c(-4,4))
qqnorm(beta3_fit_esc[1,],col=1)
lines(x=c(-4,4),y=c(-4,4))
qqnorm(beta3_fit_esc[2,],col=2)
qqnorm(beta3_fit_esc[1,],col=1)
lines(x=c(-4,4),y=c(-4,4),add=T)
qqnorm(beta3_fit_esc[2,],col=2,add=T)
qqnorm(beta3_fit_esc[3,],col=3,add=T)
qqnorm(beta3_fit_esc[4,],col=4,add=T)
qqnorm(beta3_fit_esc[5,],col=5,add=T)
qqnorm(beta3_fit_esc[6,],col=6,add=T)
qqnorm(beta3_fit_esc[1,],col=1)
lines(x=c(-4,4),y=c(-4,4),col=2)
qqnorm(beta3_fit_esc[1,],col=1)
lines(x=c(-4,4),y=c(-4,4),col=2)
qqnorm(beta3_fit_esc[2,],col=1)
lines(x=c(-4,4),y=c(-4,4),col=2)
qqnorm(beta3_fit_esc[3,],col=1)
lines(x=c(-4,4),y=c(-4,4),col=2)
qqnorm(beta3_fit_esc[4,],col=1)
lines(x=c(-4,4),y=c(-4,4),col=2)
qqnorm(beta3_fit_esc[4,],col=1)
lines(x=c(-4,4),y=c(-4,4),col=2)
qqnorm(beta3_fit_esc[5,],col=1)
lines(x=c(-4,4),y=c(-4,4),col=2)
qqnorm(beta3_fit_esc[6,],col=1)
lines(x=c(-4,4),y=c(-4,4),col=2)
qqnorm(beta3_fit_esc[7,],col=1)
lines(x=c(-4,4),y=c(-4,4),col=2)
qqnorm(beta3_fit_esc[8,],col=1)
lines(x=c(-4,4),y=c(-4,4),col=2)
qqnorm(beta3_fit_esc[9,],col=1)
lines(x=c(-4,4),y=c(-4,4),col=2)
rownames(proporciones)
colnames(proporciones)
qqnorm(beta3_fit_esc[1,],col=1,main="n=10")
lines(x=c(-4,4),y=c(-4,4),col=2)
qqnorm(beta3_fit_esc[2,],col=1,main="n=25")
lines(x=c(-4,4),y=c(-4,4),col=2)
qqnorm(beta3_fit_esc[3,],col=1,main="n=100")
lines(x=c(-4,4),y=c(-4,4),col=2)
qqnorm(beta3_fit_esc[4,],col=1,main="n=250")
lines(x=c(-4,4),y=c(-4,4),col=2)
qqnorm(beta3_fit_esc[5,],col=1,main="n=500")
lines(x=c(-4,4),y=c(-4,4),col=2)
qqnorm(beta3_fit_esc[6,],col=1,main="n=1000")
lines(x=c(-4,4),y=c(-4,4),col=2)
qqnorm(beta3_fit_esc[7,],col=1,main="n=1500")
lines(x=c(-4,4),y=c(-4,4),col=2)
qqnorm(beta3_fit_esc[8,],col=1,main="n=2000")
lines(x=c(-4,4),y=c(-4,4),col=2)
qqnorm(beta3_fit_esc[9,],col=1,main="n=3000")
lines(x=c(-4,4),y=c(-4,4),col=2)
hist(beta3_fit[1,],breaks=seq(-4.6,-0.9,0.05),col=1)
hist(beta3_fit[2,],breaks=seq(-4.6,-0.9,0.05),col=2,add=T)
hist(beta3_fit[3,],breaks=seq(-4.6,-0.9,0.05),col=3,add=T)
hist(beta3_fit[4,],breaks=seq(-4.6,-0.9,0.05),col=4,add=T)
hist(beta3_fit[5,],breaks=seq(-4.6,-0.9,0.05),col=5,add=T)
hist(beta3_fit[6,],breaks=seq(-4.6,-0.9,0.05),col=6,add=T)
hist(beta3_fit[7,],breaks=seq(-4.6,-0.9,0.05),col=7,add=T)
hist(beta3_fit[8,],breaks=seq(-4.6,-0.9,0.05),col=8,add=T)
hist(beta3_fit[1,],breaks=seq(-4.6,-0.9,0.05),col=1,legend(col=1,legend = "n=10"))
hist(beta3_fit[1,],breaks=seq(-4.6,-0.9,0.05),col=1,legend(col=1,legend = "n=10"))
legend(col=1,legend = "n=10")
hist(beta3_fit[1,],breaks=seq(-4.6,-0.9,0.05),col=1)
legend(col=1,legend = "n=10")
legend("topright",col=1,legend = "n=10")
hist(beta3_fit[1,],breaks=seq(-4.6,-0.9,0.05),col=2)
legend("topright",col=1,legend = "n=10")
legend("topright",col=2,legend = "n=10")
hist(beta3_fit[1,],breaks=seq(-4.6,-0.9,0.05),col=2)
legend("topright",col=2,legend = "n=10")
hist(beta3_fit[1,],breaks=seq(-4.6,-0.9,0.05),col=2)
legend("topright",col=2,legend = "n=10",pch=16,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
legend("topright",col=2,legend = "n=10",pch=10,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
hist(beta3_fit[1,],breaks=seq(-4.6,-0.9,0.05),col=2)
legend("topright",col=2,legend = "n=10",pch=10,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
hist(beta3_fit[1,],breaks=seq(-4.6,-0.9,0.05),col=2)
legend("topright",col=2,legend = "n=10",pch="line",cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
hist(beta3_fit[1,],breaks=seq(-4.6,-0.9,0.05),col=2)
legend("topright",col=2,legend = "n=10",pch="-",cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
hist(beta3_fit[1,],breaks=seq(-4.6,-0.9,0.05),col=2)
legend("topright",col=2,legend = "n=10",lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
n
hist(beta3_fit[1,],breaks=seq(-4.6,-0.9,0.05),col=2)
legend("topright",col=2,legend = n[1],lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
hist(beta3_fit[1,],breaks=seq(-4.6,-0.9,0.05),col=2)
legend("topright",col=2,legend = "n="n[1],lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
hist(beta3_fit[1,],breaks=seq(-4.6,-0.9,0.05),col=2)
legend("topright",col=2,legend = c("n=10"),lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
hist(beta3_fit[2,],breaks=seq(-4.6,-0.9,0.05),col=3,add=T)
legend("topright",col=2,legend = c("n=10","n=25"),lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
hist(beta3_fit[3,],breaks=seq(-4.6,-0.9,0.05),col=4,add=T)
legend("topright",col=2,legend = c("n=10","n=25","n=100"),lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
hist(beta3_fit[4,],breaks=seq(-4.6,-0.9,0.05),col=5,add=T)
legend("topright",col=2,legend = c("n=10","n=25","n=100","n=250"),lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
hist(beta3_fit[5,],breaks=seq(-4.6,-0.9,0.05),col=6,add=T)
legend("topright",col=2,legend = c("n=10","n=25","n=100","n=250","n=500"),lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
hist(beta3_fit[1,],breaks=seq(-4.6,-0.9,0.05),col=2)
legend("topright",col=2,legend = c("n=10"),lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
hist(beta3_fit[2,],breaks=seq(-4.6,-0.9,0.05),col=3,add=T)
legend("topright",col=2:3,legend = c("n=10","n=25"),lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
hist(beta3_fit[3,],breaks=seq(-4.6,-0.9,0.05),col=4,add=T)
legend("topright",col=2:4,legend = c("n=10","n=25","n=100"),lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
hist(beta3_fit[4,],breaks=seq(-4.6,-0.9,0.05),col=5,add=T)
legend("topright",col=2:5,legend = c("n=10","n=25","n=100","n=250"),lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
hist(beta3_fit[5,],breaks=seq(-4.6,-0.9,0.05),col=6,add=T)
legend("topright",col=2:6,legend = c("n=10","n=25","n=100","n=250","n=500"),lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
n
lab=c("n=10","n=25","n=100","n=250","n=500","n=1000","n=1500","n=2000","n=3000")
lab[1]
lab[1:2]
hist(beta3_fit[1,],breaks=seq(-4.6,-0.9,0.05),col=2)
legend("topright",col=2,legend = lab[1],lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
hist(beta3_fit[2,],breaks=seq(-4.6,-0.9,0.05),col=3,add=T)
legend("topright",col=2:3,legend = lab[1:2],lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
hist(beta3_fit[3,],breaks=seq(-4.6,-0.9,0.05),col=4,add=T)
legend("topright",col=2:4,legend = lab[1:3],lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
hist(beta3_fit[4,],breaks=seq(-4.6,-0.9,0.05),col=5,add=T)
legend("topright",col=2:5,legend = lab[1:4],lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
hist(beta3_fit[5,],breaks=seq(-4.6,-0.9,0.05),col=6,add=T)
legend("topright",col=2:6,legend = lab[1:5],lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
hist(beta3_fit[6,],breaks=seq(-4.6,-0.9,0.05),col=7,add=T)
legend("topright",col=2:7,legend = lab[1:6],lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
hist(beta3_fit[7,],breaks=seq(-4.6,-0.9,0.05),col=8,add=T)
legend("topright",col=2:8,legend = lab[1:7],lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
hist(beta3_fit[8,],breaks=seq(-4.6,-0.9,0.05),col=9,add=T)
legend("topright",col=2:9,legend = lab[1:8],lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
hist(beta3_fit[9,],breaks=seq(-4.6,-0.9,0.05),col=10,add=T)
legend("topright",col=2:10,legend = lab[1:9],lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
lab=c("n=10","n=25","n=100","n=250","n=500","n=1000","n=1500","n=2000","n=3000")
hist(beta3_fit[1,],breaks=seq(-4.6,-0.9,0.05),col=2)
lab=c("n=10","n=25","n=100","n=250","n=500","n=1000","n=1500","n=2000","n=3000")
hist(beta3_fit[1,],breaks=seq(-4.6,-0.9,0.05),col=2)
legend("topright",col=2,legend = lab[1],lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
hist(beta3_fit[2,],breaks=seq(-4.6,-0.9,0.05),col=3,add=T)
legend("topright",col=2:3,legend = lab[1:2],lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
hist(beta3_fit[3,],breaks=seq(-4.6,-0.9,0.05),col=4,add=T)
legend("topright",col=2:4,legend = lab[1:3],lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
lab=c("n=10","n=25","n=100","n=250","n=500","n=1000","n=1500","n=2000","n=3000")
lab=c("n=10","n=25","n=100","n=250","n=500","n=1000","n=1500","n=2000","n=3000")
hist(beta3_fit[1,],breaks=seq(-4.6,-0.9,0.05),col=2)
legend("topright",col=2,legend = lab[1],lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
hist(beta3_fit[2,],breaks=seq(-4.6,-0.9,0.05),col=3,add=T)
legend("topright",col=2:3,legend = lab[1:2],lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
hist(beta3_fit[3,],breaks=seq(-4.6,-0.9,0.05),col=4,add=T)
legend("topright",col=2:4,legend = lab[1:3],lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
lab[1:3]
hist(beta3_fit[4,],breaks=seq(-4.6,-0.9,0.05),col=5,add=T)
legend("topright",col=2:5,legend = lab[1:4],lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
hist(beta3_fit[5,],breaks=seq(-4.6,-0.9,0.05),col=6,add=T)
legend("topright",col=2:6,legend = lab[1:5],lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
hist(beta3_fit[6,],breaks=seq(-4.6,-0.9,0.05),col=7,add=T)
legend("topright",col=2:7,legend = lab[1:6],lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
hist(beta3_fit[7,],breaks=seq(-4.6,-0.9,0.05),col=8,add=T)
legend("topright",col=2:8,legend = lab[1:7],lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
hist(beta3_fit[8,],breaks=seq(-4.6,-0.9,0.05),col=9,add=T)
legend("topright",col=2:9,legend = lab[1:8],lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
hist(beta3_fit[9,],breaks=seq(-4.6,-0.9,0.05),col=10,add=T)
legend("topright",col=2:10,legend = lab[1:9],lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
lab=c("n=10","n=25","n=100","n=250","n=500","n=1000","n=1500","n=2000","n=3000")
hist(beta3_fit[1,],breaks=seq(-4.6,-0.9,0.05),col=2)
legend("topright",col=2,legend = lab[1],lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
hist(beta3_fit[9,],breaks=seq(-4.6,-0.9,0.05),col=10,add=T)
legend("topright",col=2:10,legend = lab[1:9],lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
hist(beta3_fit[9,],breaks=seq(-4.6,-0.9,0.05),col=10,add=T)
hist(beta3_fit[9,],breaks=seq(-4.6,-0.9,0.05),col=10,add=T)
legend("topright",col=c(2:9,20),legend = lab[1:9],lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
lab=c("n=10","n=25","n=100","n=250","n=500","n=1000","n=1500","n=2000","n=3000")
hist(beta3_fit[1,],breaks=seq(-4.6,-0.9,0.05),col=2)
legend("topright",col=c(2:9,20),legend = lab[1:9],lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
lab=c("n=25","n=100","n=250","n=500","n=1000","n=1500","n=2000","n=3000")
hist(beta3_fit[2,],breaks=seq(-4.6,-0.9,0.05),col=2,add=T)
legend("topright",col=2,legend = lab[1],lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
lab=c("n=25","n=100","n=250","n=500","n=1000","n=1500","n=2000","n=3000")
hist(beta3_fit[2,],breaks=seq(-4.6,-0.9,0.05),col=2,add=T)
legend("topright",col=2,legend = lab[1],lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
hist(beta3_fit[3,],breaks=seq(-4.6,-0.9,0.05),col=3,add=T)
legend("topright",col=2:3,legend = lab[1:2],lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
lab=c("n=25","n=100","n=250","n=500","n=1000","n=1500","n=2000","n=3000")
hist(beta3_fit[2,],breaks=seq(-4.6,-0.9,0.05),col=2,add=T)
hist(beta3_fit[2,],breaks=seq(-4.6,-0.9,0.05),col=2,add=T)
hist(beta3_fit[2,],breaks=seq(-4.6,-0.9,0.05),col=2)
legend("topright",col=2,legend = lab[1],lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
hist(beta3_fit[3,],breaks=seq(-4.6,-0.9,0.05),col=3,add=T)
legend("topright",col=2:3,legend = lab[1:2],lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
hist(beta3_fit[4,],breaks=seq(-4.6,-0.9,0.05),col=4,add=T)
legend("topright",col=2:4,legend = lab[1:3],lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
hist(beta3_fit[5,],breaks=seq(-4.6,-0.9,0.05),col=5,add=T)
legend("topright",col=2:5,legend = lab[1:4],lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
hist(beta3_fit[6,],breaks=seq(-4.6,-0.9,0.05),col=6,add=T)
legend("topright",col=2:6,legend = lab[1:5],lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
lab=c("n=25","n=100","n=250","n=500","n=1000","n=1500","n=2000","n=3000")
hist(beta3_fit[2,],breaks=seq(-4.6,-0.9,0.05),col=2)
hist(beta3_fit[3,],breaks=seq(-4.6,-0.9,0.05),col=3,add=T)
hist(beta3_fit[4,],breaks=seq(-4.6,-0.9,0.05),col=4,add=T)
hist(beta3_fit[5,],breaks=seq(-4.6,-0.9,0.05),col=5,add=T)
hist(beta3_fit[6,],breaks=seq(-4.6,-0.9,0.05),col=6,add=T)
hist(beta3_fit[7,],breaks=seq(-4.6,-0.9,0.05),col=7,add=T)
hist(beta3_fit[8,],breaks=seq(-4.6,-0.9,0.05),col=8,add=T)
hist(beta3_fit[9,],breaks=seq(-4.6,-0.9,0.05),col=9,add=T)
legend("topright",col=2:9,legend = lab[1:8],lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
lab=c("n=25","n=100","n=250","n=500","n=1000","n=1500","n=2000","n=3000")
hist(beta3_fit[2,],breaks=seq(-4.6,-0.9,0.05),col=2,main="histogramas paa beta2")
hist(beta3_fit[3,],breaks=seq(-4.6,-0.9,0.05),col=3,add=T)
hist(beta3_fit[4,],breaks=seq(-4.6,-0.9,0.05),col=4,add=T)
lab=c("n=25","n=100","n=250","n=500","n=1000","n=1500","n=2000","n=3000")
lab=c("n=25","n=100","n=250","n=500","n=1000","n=1500","n=2000","n=3000")
hist(beta3_fit[2,],breaks=seq(-4.6,-0.9,0.05),col=2,main="histogramas para beta2")
hist(beta3_fit[3,],breaks=seq(-4.6,-0.9,0.05),col=3,add=T)
hist(beta3_fit[4,],breaks=seq(-4.6,-0.9,0.05),col=4,add=T)
hist(beta3_fit[5,],breaks=seq(-4.6,-0.9,0.05),col=5,add=T)
hist(beta3_fit[6,],breaks=seq(-4.6,-0.9,0.05),col=6,add=T)
hist(beta3_fit[7,],breaks=seq(-4.6,-0.9,0.05),col=7,add=T)
hist(beta3_fit[8,],breaks=seq(-4.6,-0.9,0.05),col=8,add=T)
hist(beta3_fit[9,],breaks=seq(-4.6,-0.9,0.05),col=9,add=T)
legend("topright",col=2:9,legend = lab[1:8],lty=1,cex=0.95,bty="n",x.intersp = 0.3,y.intersp = 0.3)
View(proporciones)
beta3_fit_esc <- t(scale(t(beta3_fit)))
qqnorm(beta3_fit_esc[1,],col=1,main="n=10")
lines(x=c(-4,4),y=c(-4,4),col=2)
qqnorm(beta3_fit_esc[2,],col=1,main="n=25")
lines(x=c(-4,4),y=c(-4,4),col=2)
qqnorm(beta3_fit_esc[3,],col=1,main="n=100")
lines(x=c(-4,4),y=c(-4,4),col=2)
qqnorm(beta3_fit_esc[4,],col=1,main="n=250")
lines(x=c(-4,4),y=c(-4,4),col=2)
qqnorm(beta3_fit_esc[5,],col=1,main="n=500")
lines(x=c(-4,4),y=c(-4,4),col=2)
qqnorm(beta3_fit_esc[6,],col=1,main="n=1000")
lines(x=c(-4,4),y=c(-4,4),col=2)
qqnorm(beta3_fit_esc[7,],col=1,main="n=1500")
lines(x=c(-4,4),y=c(-4,4),col=2)
qqnorm(beta3_fit_esc[8,],col=1,main="n=2000")
lines(x=c(-4,4),y=c(-4,4),col=2)
qqnorm(beta3_fit_esc[9,],col=1,main="n=3000")
lines(x=c(-4,4),y=c(-4,4),col=2)
knitr::opts_chunk$set(echo = TRUE)
knitr
install.packages("ggplot2")
install.packages("digest")
# installing/loading the package:
if(!require(installr)) {
install.packages("installr"); require(installr)} #load / install+load installr
# using the package:
updateR() # this will start the updating process of your R installation.  It will check for newer versions, and if one is available, will guide you through the decisions you'd need to make.
install.packages("ggplot2")
install.packages("ggplot2")
library("MASS")
install.packages("MASS")
#install.packages("MASS")
library("MASS")
datos <- Pima.tr
View(datos)
attach(datos)
install.packages("ggplot2")
library("ggplot2")
ggpairs(datos)
rm(list=ls())
library("ggplot2")
install.packages("GGally")
library("GGally")
datos.tr <- Pima.tr
attach(datos.tr)
ggpairs(datos.tr)
ggpairs(datos.tr)
pairs(datos.tr)
fit.logis <- glm(type ~., data=datos.tr,family = "Binomial")
fit.logis <- glm(type ~., data=datos.tr,family = "Bynomial")
fit.logis <- glm(type ~.,family = Binomial,data=datos.tr)
library("ISLR")
fit.logis <- glm(type ~.,family = Binomial,data=datos.tr)
fit.logis <- glm(type ~.,family = binomial,data=datos.tr)
summary(fit.logis)
y <- factor(type)
y
y <- factor(type)=="Yes"
y
summary(fit.logis)
fit.logis$fitted.values
predichos <- fit.logis$fitted.values >= 0.5
predichos
diabetes <- type == "Yes"
install.packages("ModelMetrics")
#install.packages("MASS")
#install.packages("GGally")
#install.packages("ggplot2")
#install.packages("ModelMetrics")
library("ModelMetrics")
matriz.confusion <- confusionMatrix(diabetes,predichos)
View(matriz.confusion)
datos.te <- Pima.te
predichos.te <- (predict(fit.logis,newdata=datos.te,type="response"))>=0.5
matriz.confusion.tr <- confusionMatrix(diabetes,predichos.tr)
predichos.tr <- fit.logis$fitted.values >= 0.5
matriz.confusion.tr <- confusionMatrix(diabetes,predichos.tr)
diabetes.tr <- type == "Yes"
attach(datos.te)
diabetes.te <- type == "Yes"
matriz.confusion.te <- confusionMatrix(diabetes.te,predichos.te)
View(matriz.confusion.tr)
View(matriz.confusion.te)
dato.te <- datos.te[1,]
dato.te
dato.te[1,]
dato.te[1,] <- c(2,100,70,20,26,0.24,30)
dato.te[1,] <- c(2,100,70,20,26,0.24,30,"No")
datos.te
dato.te
predicho.te <- (predict(fit.logis,newdata=dato.te,type="response"))>=0.5
dato.te[1,1:7] <- c(2,100,70,20,26,0.24,30,"No")
dato.te[1,1:7] <- c(2,100,70,20,26,0.24,30)
dato.te <- datos.te[1,]
dato.te[1,1:7] <- c(2,100,70,20,26,0.24,30)
predicho.te <- (predict(fit.logis,newdata=dato.te,type="response"))>=0.5
predicho.te
dato.te
datos <- iris
View(datos)
datos <- iris[,1:4]
View(datos)
pca <- prcomp(datos)
pca
library("ggplot2")
autoplot(pca)
install.packages(ggfortify)
install.packages("ggfortify")
library(ggfortify)
library("ggfortify")
install.packages("ggfortify")
install.packages("ggfortify")
library("ggfortify")
plot(pca)
autoplot(pca)
library("ggplot2")
autoplot(pca)
setwd("~/Descargas/Redes Neuronales/TP2")
datos <- read.csv("tp2_training_dataset.csv",header=F,sep=",")
pca <- prcomp(datos,scale=T,rank=5)
pca
size(pca)
length(pca)
View(pca)
pca$rotation
write(pca,file="pca.csv",sep=",")
write(pca,file="pca.txt",sep=",")
write(pca,file="",sep=",")
pcas <- pca$rotatio
pcas <- pca$rotation
write(pcas,file="pca.csv",sep=",")
setwd("~/Descargas/Redes Neuronales/TP2")
rm(list=ls())
datos <- read.csv("tp2_training_dataset.csv",header=F,sep=",")
pca <- prcomp(datos,scale=T,rank=3)
pcas <- pca$rotation
write(pcas,file="pca.csv",sep=",")
pca
pca$rotation
pca$rotation
write(pcas,file="pca.csv",sep=",")
rm(list=ls())
datos <- read.csv("tp2_training_dataset.csv",header=F,sep=",")
pca <- prcomp(datos[,-1],scale=T,rank=3)
a<-c(1,2,3,4)
a[-1]
pcas <- pca$rotation
write(pcas,file="pca.csv",sep=",")
write(pcas,file="pca.txt",sep=",")
View(pcas)
write(t(pcas),file="pca.txt",sep=",")
write(pcas,file="pca.txt",ncolumns = 3,sep=",")
View(pcas)
write(t(pcas),file="pca.txt",ncolumns = 3,sep=",")
write(t(pcas),file="pca.csv",ncolumns = 3,sep=",")
